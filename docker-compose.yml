version: '3.3'

services:
  redis:
    image: redis:latest
    restart: always
    logging:
      driver: journald
      options:
        tag: "{{.Name}}"

  postgres:
#    image: postgres:12
    build: ./postgres
    volumes:
      - postgres_db:/home/postgresql/
      - postgres_db:/var/log/postgresql
    restart: always
    environment:
      - POSTGRES_USER=devops
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=project
      - PGDATA=/home/postgresql/data
    logging:
      driver: journald
      options:
        tag: "{{.Name}}"

  web:
    build: ./django
    command: uwsgi --ini /code/uwsgi.ini
    volumes:
      - ./django:/code
      - sock:/sock
    depends_on:
      - postgres
    logging:
      driver: journald
      options:
        tag: "{{.Name}}"

  nginx:
    build: ./nginx
    volumes:
      - sock:/sock
      - ./django:/code
    ports:
      - 80:8000
    depends_on:
      - web
    logging:
      driver: journald
      options:
        tag: "{{.Name}}"
   
  sentry:
    image: sentry
    env_file:
      - sentry.env
    ports:
      - 9000:9000
    logging:
      driver: journald
      options:
        tag: "{{.Name}}"
   
  sentry-worker-1:
    image: sentry
    env_file:
      - sentry.env
    command: "sentry run worker"
    logging:
      driver: journald
      options:
        tag: "{{.Name}}"

  sentry-cron:
    image: sentry
    env_file:
      - sentry.env
    command: "sentry run cron"
    logging:
      driver: journald
      options:
        tag: "{{.Name}}"

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus:/etc/prometheus
    ports: 
      - 9090:9090
    logging:
      driver: journald
      options:
        tag: "{{.Name}}"

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro

  cadvisor:
    image: google/cadvisor:latest
#    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
  
  grafana:
    image: grafana/grafana:6.7.2-ubuntu
    ports: 
      - 3000:3000
    volumes:
      - grafana-storage:/var/lib/grafana
#      - ./grafana:/etc/grafana
    logging:
      driver: journald
      options:
        tag: "{{.Name}}"

volumes:
  postgres_db:
  sock:
  grafana-storage:
