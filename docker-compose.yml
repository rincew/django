version: '3.3'

services:
  redis:
    image: redis:latest
    restart: always

  postgres:
    build: ./postgres
    volumes:
      - postgres_db:/home/postgresql/
      - postgres_db:/var/log/postgresql
    restart: always
    environment:
      - POSTGRES_USER=devops
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=project
      - PGDATA=/home/postgresql/data

  web:
    build: ./django
    command: uwsgi --ini /code/uwsgi.ini
    volumes:
      - ./django:/code
      - sock:/sock
    depends_on:
      - postgres

  nginx:
    build: ./nginx
    volumes:
      - sock:/sock
      - ./django:/code
      - ./nginx/django.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
    depends_on:
      - web
   
  sentry:
    image: sentry
    env_file:
      - sentry.env
    ports:
      - 9000:9000
    depends_on:
      - postgres
   
  sentry-worker-1:
    image: sentry
    env_file:
      - sentry.env
    command: "sentry run worker"

  sentry-cron:
    image: sentry
    env_file:
      - sentry.env
    command: "sentry run cron"

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus:/etc/prometheus
    ports: 
      - 9090:9090
  
  alertmanager:
    image: prom/alertmanager
    volumes: 
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - 9093:9093
    depends_on:
      - prometheus


  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    depends_on:
      - prometheus

  cadvisor:
    image: google/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
  
  grafana:
    image: grafana/grafana:6.7.2-ubuntu
    ports: 
      - 3000:3000
    volumes:
      - grafana-storage:/var/lib/grafana

  portainer:
    image: portainer/portainer
    command: -H unix:///var/run/docker.sock
    restart: always
    ports:
      - 7000:9000
      - 8000:8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  tank:
    image: direvius/yandex-tank
    volumes:
      - ./tank:/var/loadtest

volumes:
  postgres_db:
  sock:
  grafana-storage:
  portainer_data:
